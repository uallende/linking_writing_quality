import numpy as np

lgb_params_1 = {
    'boosting_type': 'gbdt', 
    'metric': 'rmse',
    'reg_alpha': 0.003188447814669599, 
    'reg_lambda': 0.0010228604507564066, 
    'colsample_bytree': 0.8,  
    'subsample_freq': 1,  
    'subsample': 0.75,  
    'learning_rate': 0.01716485155812008, 
    'num_leaves': 19, 
    'min_child_samples': 46,
    'n_estimators': 2000,
    'verbosity': -1,
    }

new_params = {'boosting_type': 'gbdt', 
              'colsample_bytree': 1.0, 
              'importance_type': 'split', 
              'learning_rate': 0.0183, 
              'max_depth': 6, 'min_child_samples': 49, 
              'min_child_weight': 0.001, 
              'min_split_gain': 0.0, 
              'n_estimators': 338, 
              'num_leaves': 69, 
              'reg_alpha': 0.6073, 
              'reg_lambda': 0.3127, 
              'subsample': 1.0, 
              'subsample_for_bin': 200000, 
              'subsample_freq': 0, 
              'verbose': -1}

xgb_params = {
    'alpha': 1,
    'colsample_bytree': 0.8,
    'gamma': 1.5,
    'learning_rate': 0.05,
    'max_depth': 4,
    'min_child_weight': 10,
    'subsample': 0.8,
    'device': 'cuda',
    'n_estimators': 1024 
    }

xgb_params_2 = {
    'objective': 'reg:squarederror', 
    'base_score': None, 
    'booster': 'gbtree', 
    'callbacks': None, 
    'colsample_bylevel': None, 
    'colsample_bynode': None, 
    'colsample_bytree': 0.8739265814988941, 
    'device': 'cuda', 
    'early_stopping_rounds': 250, 
    'enable_categorical': False, 
    'gamma': 0.3893408430829386, 
    'learning_rate': 0.18205557831997368, 
    'max_depth': 3, 
    'min_child_weight': 4, 
    'missing': np.nan, 
    'random_state': 42, 
    'subsample': 0.6407940935121966,
    'device': 'cuda',
    'tree_method': 'hist',
    'n_estimators': 2000 }


xgb_params_3 = {
    'boosting_type': 'goss', 
    'colsample_bytree': 1.0, 
    'importance_type': 'split', 
    'learning_rate': 0.09078219853571294, 
    'max_depth': 7, 
    'min_child_samples': 10, 
    'min_child_weight': 0.001, 
    'min_split_gain': 0.0, 
    'n_estimators': 2000, 
    'num_leaves': 15, 
    'random_state': 42, 
    'reg_alpha': 0.025677282656185296, 
    'reg_lambda': 0.1519356321376626, 
    'subsample': 1.0, 
    'subsample_for_bin': 200000, 
    'subsample_freq': 0, 
    'verbose': -1,
    'device': 'cuda',
    'tree_method': 'hist'}

feat_select = ['one_gram_tok_9',
 'sent_len_sum',
 'down_event_6',
 'one_gram_tok_5',
 'one_gram_tok_8',
 'pauses_1_sec',
 'down_event_12',
 'down_event_13',
 'one_gram_tok_7',
 'sent_len_median',
 'word_count_acc_skew',
 'one_gram_tok_6',
 'inter_key_median_lantency',
 'down_event_1',
 'evid_acc_skew',
 'paragraph_word_count_max',
 'down_event_11',
 'paragraph_len_median',
 'pauses_1_half_sec',
 'cursor_pos_acc_max',
 'cursor_pos_acc_skew',
 'evid_acc_std',
 'bigram_tok_5',
 'roc_std',
 'inter_key_largest_lantency',
 'paragraph_word_count_last',
 'bigram_tok_7',
 'paragraph_len_sum',
 'sent_len_q1',
 'one_gram_tok_4',
 'sent_word_count_max',
 'down_event_3',
 'evid_acc_kurt',
 'pauses_half_sec',
 'paragraph_word_count_first',
 'pos_change_count',
 'paragraph_len_q1',
 'r_burst_std',
 'text_change_nunique',
 'one_gram_tok_0',
 'paragraph_len_min',
 'r_burst_count',
 'sent_len_last',
 'sent_len_first',
 'cursor_pos_roc_kurt',
 'down_event_2',
 'paragraph_word_count_median',
 'one_gram_tok_2',
 'r_burst_mean',
 'cursor_pos_acc_std',
 'cursor_pos_acc_mean',
 'sent_word_count_first',
 'roc_skew',
 'one_gram_tok_10',
 'sent_len_min',
 'sent_len_max',
 'cursor_pos_roc_skew',
 'paragraph_len_last',
 'cursor_pos_roc_mean',
 'cursor_pos_acc_kurt',
 'paragraph_len_mean',
 'word_count_acc_kurt',
 'paragraph_word_count_q3',
 'cursor_pos_roc_max',
 'paragraph_len_first',
 'activity_2_cnt',
 'one_gram_tok_11',
 'roc_count',
 'total_pause_time',
 'down_event_5',
 'one_gram_tok_1',
 'sent_count',
 'down_event_9',
 'sent_word_count_q3',
 'cursor_pos_acc_neg',
 'roc_kurt',
 'paragraph_len_max',
 'std_pause_time',
 'one_gram_tok_3',
 'mean_pause_time',
 'bigram_tok_1',
 'sent_word_count_last',
 'sent_word_count_mean',
 'word_count_acc_std',
 'down_event_4',
 'paragraph_word_count_min',
 'cursor_pos_neg_change_count',
 'r_burst_max',
 'sent_len_mean',
 'p_burst_std',
 'down_event_15',
 'p_burst_max',
 'paragraph_len_q3',
 'cursor_pos_roc_q3',
 'bigram_tok_8',
 'pauses_3_sec',
 'paragraph_word_count_mean',
 'cursor_pos_pst_change_count',
 'p_burst_sum',
 'bigram_tok_2',
 'p_burst_median',
 'sent_len_q3',
 'p_burst_count',
 'bigram_tok_6',
 'down_event_7',
 'evid_acc_max',
 'activity_0_cnt',
 'sent_word_count_median',
 'paragraph_word_count_sum',
 'cursor_pos_roc_std',
 'down_event_nunique',
 'r_burst_median',
 'cursor_pos_acc_q1',
 'word_count_acc_pst',
 'paragraph_word_count_q1',
 'cursor_pos_acc_sum',
 'bigram_tok_3',
 'down_event_17',
 'evid_acc_pst',
 'word_count_acc_neg',
 'evid_acc_neg',
 'bigram_tok_4',
 'down_event_19',
 'p_burst_mean',
 'sent_word_count_q1',
 'roc_zro_count',
 'roc_sum',
 'cursor_pos_roc_count_zr',
 'roc_mean',
 'paragraph_count',
 'neg_change_count',
 'p_burst_min',
 'one_gram_tok_12',
 'r_burst_sum',
 'bigram_tok_0',
 'cursor_pos_acc_pst',
 'down_event_10',
 'word_count_acc_zero',
 'bigram_tok_9',
 'evid_acc_zero',
 'cursor_pos_acc_zero',
 'sent_word_count_min',
 'cursor_pos_roc_median',
 'pauses_2_sec',
 'word_count_acc_max',
 'sent_word_count_sum',
 'cursor_pos_acc_q3',
 'down_event_14',
 'down_event_18']